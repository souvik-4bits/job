{
    "openapi": "3.0.0",
    "info": {
        "title": "Recruit for Rewards API",
        "description": "Recruit for Rewards API",
        "contact": {
            "name": "Support Team",
            "email": "support@example.com"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://4bitsdev.xyz/",
            "description": "Recruit for Rewards API Server"
        }
    ],
    "paths": {
        "/api/customer-transaction/{id}?page_size={page_size}": {
            "get": {
                "tags": [
                    "Customer Points"
                ],
                "summary": "customer points Transaction",
                "operationId": "customer Points",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "customer Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "page size",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/customer-balance/{id}": {
            "get": {
                "tags": [
                    "Customer Points"
                ],
                "summary": "customer Balance",
                "operationId": "customer Balance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "customer Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/points": {
            "post": {
                "tags": [
                    "Points"
                ],
                "summary": "Add points to customer",
                "operationId": "points",
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "point",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "transaction_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/void-points/{id}": {
            "put": {
                "tags": [
                    "Points"
                ],
                "summary": "Void point",
                "operationId": "void Points",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "transaction Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        }
    }
}